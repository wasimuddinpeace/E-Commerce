{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./ClientApp/app/app.component.ts","./ClientApp/app/app.component.html","./ClientApp/app/app.module.ts","./ClientApp/app/shared/dataService.ts","./ClientApp/app/shop/cart.component.ts","./ClientApp/app/shop/cart.component.html","./ClientApp/app/shop/checkout.component.ts","./ClientApp/app/shop/checkout.component.html","./ClientApp/app/shop/login.component.ts","./ClientApp/app/shop/login.component.html","./ClientApp/app/shop/order.ts","./ClientApp/app/shop/productList.component.ts","./ClientApp/app/shop/productList.component.html","./ClientApp/app/shop/shop.component.ts","./ClientApp/app/shop/shop.component.html","./ClientApp/environments/environment.ts","./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl:\"./app.component.html\" ,\n  styles: []\n})\nexport class AppComponent {\n  title = 'Product List';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ProductListComponent } from './shop/productList.component';\r\nimport { dataService } from './shared/dataService';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CartComponent } from './shop/cart.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms'\r\nimport { ShopComponent } from './shop/shop.component';\r\nimport { CheckoutComponent } from './shop/checkout.component';\r\nimport { login } from './shop/login.component';\r\n\r\nlet routes = [\r\n    {path: \"\", component: ShopComponent },\r\n    { path: \"Checkout\", component: CheckoutComponent },\r\n    {path:\"login\", component: login}\r\n\r\n]\r\n\n@NgModule({\n  declarations: [\n        AppComponent,\n        ProductListComponent,\n        CartComponent,\n        ShopComponent,\n        CheckoutComponent,\n        login\n\n  ],\n  imports: [\n      BrowserModule,\n      HttpClientModule,\n      RouterModule.forRoot(routes, {\n          useHash: true,\n          enableTracing: false // for debugging routes\n      }),\n      FormsModule\n\n  ],\n    providers: [\n        dataService\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { product } from \"../shared/product\";\r\nimport { Order, OrderItem } from '../shop/order';\r\n\r\n\r\n@Injectable()\r\nexport class dataService{\r\n    Products: product[] = [];\r\n\r\n\r\n    //Initialize Order before  using it.\r\n    public order: Order = new Order();\r\n\r\n    constructor(private httpclient:HttpClient) {\r\n\r\n    }\r\n\r\n    private token: string = \"\";\r\n    private tokenExpiration: Date;\r\n\r\n    public get loginRequired(): boolean {\r\n\r\n        return this.token.length == 0 || this.tokenExpiration > new Date();\r\n    }\r\n\r\n    //login methods expect that creds are send and the login method return an observable \r\n    //the data service is then called by login component which will subscribe the data from data(boolean ) service and depending on the\r\n    //result it will routet to the default page or the checkout page\r\n    //\r\n    login(creds): Observable<boolean> {\r\n        return this.httpclient\r\n            .post(\"/account/createtoken\", creds)\r\n            .pipe(\r\n                map((data: any) => {\r\n                this.token = data.token, //populated from the account controller\r\n                        this.tokenExpiration = data.expiration // populated from the account controller\r\n                return true;\r\n\r\n            }));\r\n\r\n    }\r\n\r\n    public checkout(){\r\n       //this is to check if the view model validation is failed due to noo order number, so we set it manually if\r\n        //there exist no order number\r\n        if (!this.order.orderNumber) {\r\n            this.order.orderNumber = this.order.orderDate.getFullYear().toString() + this.order.orderDate.getTime().toString();\r\n        }\r\n        return this.httpclient.post(\"/api/orders\", this.order, {\r\n            headers: new HttpHeaders().set( \"Authorization\",\"Bearer \" + this.token)\r\n        })\r\n            .pipe(map(response => {\r\n                this.order = new Order();\r\n                return true;\r\n            }));\r\n    }\r\n\r\n    // data is the dat from the api call httpclient.get(\"/api/client\")\r\n    //Pipe so that we have multiple interceptors \r\n    //map is to map the data from the api call to the product array declarred in here.\r\n    //set of parenthesis is important for data \r\n    loadProducts(): Observable<boolean> {\r\n        return this.httpclient.get(\"/api/products\")\r\n            .pipe(\r\n                map((data: any[]) => {\r\n                this.Products = data;\r\n                return true;\r\n            }));\r\n    }\r\n\r\n    public addToOrder(product: product) { \r\n        //check whether the orderItem exists or not\r\n        //if (this.order) {\r\n        //    this.order = new Order();\r\n        //}\r\n        let item: OrderItem = this.order.items.find(i => i.productId == product.id);\r\n        if (item) {\r\n            item.quantity++;\r\n        }\r\n        else {\r\n\r\n            item = new OrderItem();\r\n            item.productId = product.id;\r\n            item.productArtist = product.artist;\r\n            item.productArtId = product.artId;\r\n            item.productCategory = product.category;\r\n            item.productSize = product.size;\r\n            item.productTitle = product.title;\r\n            item.unitPrice = product.price;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n}","import { Component } from '@angular/core';\r\nimport { dataService } from '../shared/dataService';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n\r\n    selector: \"my-cart\",\r\n    templateUrl:\"./cart.component.html\",\r\n    styleUrls:[]\r\n}) \r\n\r\nexport class CartComponent {\r\n\r\n    constructor(public data: dataService,private router: Router) { }\r\n    onCheckout() {\r\n        if (this.data.loginRequired) {\r\n            //Force Login\r\n            this.router.navigate([\"login\"]);\r\n        }\r\n        else {\r\n            //go to checkout\r\n            this.router.navigate([\"Checkout\"]);\r\n        }\r\n    }\r\n}","<h3>Shopping Cart</h3>\r\n<div> #/Items:{{data.order.items.length}}</div>\r\n<div>Subtotal:{{data.order.subtotal | currency : \"USD\" : true}}</div>\r\n<table class=\"table table-condensed table-hover\">\r\n    <thead>\r\n        <tr>\r\n            <td>Product</td>\r\n            <td>#</td>\r\n            <td>$</td>\r\n            <td>Total</td>\r\n        </tr>\r\n        </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let o of data.order.items\">\r\n            <td> {{ o.productCategory }} - {{o.productTitle}}</td>\r\n            <td> {{ o.quantity }}</td>\r\n            <td> {{ o.unitPrice | currency : \"USD\" : true }}</td>\r\n            <td> {{ (o.unitprice*o.quantity) | currency : \"USD\" : true}} </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<button class=\"btn btn-success\" *ngIf=\"data.order.items.length>0\" (click)=\"onCheckout()\">Checkout</button>","import { Component } from \"@angular/core\";\nimport { dataService } from '../shared/dataService';\r\nimport { Router } from '@angular/router';\r\n\n\n@Component({\n    selector: \"checkout\",\n    templateUrl: \"checkout.component.html\",\n    styleUrls: ['checkout.component.css']\n})\nexport class CheckoutComponent {\r\n    errorMessage: string;\n\n    constructor(public data: dataService, private router: Router) {\n    }\n\n    onCheckout() {\n        // TODO\n        this.data.checkout()\n            .subscribe(success => {\n                if (success) {\n                    alert(\"Order created\");\n                    this.router.navigate([\"/\"]);\n                }\n            },\n                err => this.errorMessage = \"Failed to save the order\"); \n    }\n}","<div class=\"row\">\r\n    <div *ngIf=\"errorMessage\" class=\"alert alert-warning\">{{errorMessage}}</div>\r\n    <h3>Confirm Order</h3>\r\n    <table class=\"table table-bordered table-hover\">\r\n        <tr *ngFor=\"let o of data.order.items\">\r\n            <td><img src=\"/img/{{ o.productArtId }}.jpg\" alt=\"o.productTitle\" class=\"img-thumbnail checkout-thumb\" /></td>\r\n            <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\r\n            <td>{{ o.quantity }}</td>\r\n            <td>{{ o.unitPrice|currency:'USD':true }}</td>\r\n            <td>{{ (o.unitPrice * o.quantity)|currency:'USD':true }}</td>\r\n        </tr>\r\n    </table>\r\n    <div class=\"col-md-4 offset-md-8  text-right\">\r\n        <table class=\"table table-condensed\">\r\n            <tr>\r\n                <td class=\"text-right\">Subtotal</td>\r\n                <td class=\"text-right\">{{ data.order.subtotal|currency:'USD':true }}</td>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"text-right\">Shipping</td>\r\n                <td class=\"text-right\">$ 0.00</td>\r\n            </tr>\r\n            <tr>\r\n                <td class=\"text-right\">Total:</td>\r\n                <td class=\"text-right\">{{ data.order.subtotal|currency:'USD':true }}</td>\r\n            </tr>\r\n        </table>\r\n        <button class=\"btn btn-success\" (click)=\"onCheckout()\" style=\"margin:12px \">Complete Purchase</button>\r\n        <a routerLink=\"/\" class=\"btn btn-info\">Cancel</a>\r\n    </div>\r\n\r\n</div>","import { Component } from '@angular/core';\r\nimport { dataService } from '../shared/dataService';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n      selector:\"login\",\r\n        templateUrl: \"login.component.html\",\r\n        styleUrls: []\r\n})\r\nexport class login {\r\n    errorMessage: string;\r\n    constructor(private data: dataService, private router: Router) {\r\n\r\n    }\r\n\r\n    //An Object that represents data on our form\r\n    //Two way binding from the component to the html\r\n    // From the html to the component\r\n    public creds = {\r\n        username:\"\",\r\n        password:\"\"\r\n    };\r\n\r\n    onLogin() {\r\n        this.data.login(this.creds)\r\n            .subscribe(success => {\r\n                if (this.data.order.items.length == 0) {\r\n                    this.router.navigate([\"/\"]);\r\n                }\r\n                else {\r\n                    this.router.navigate([\"Checkout\"]);\r\n                }\r\n\r\n            }, error => this.errorMessage = \"Failed to Login\")\r\n\r\n    }\r\n}\r\n\r\n//Note: That the creds are coming from  login cshtml --> account controller --- .data service --> login component \r\n","<div class=\"row\">\n  <div class=\"col-md-4 col-md-offset-4\">\n    <div *ngIf=\"errorMessage\" class=\"alert alert-warning\">{{errorMessage}}</div>\r\n      <form (submit)=\"onLogin()\" #theForm=\"ngForm\" novalidate>\r\n          <div class=\"form-group\">\r\n              <label for=\"username\">Username</label>\r\n              <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"creds.username\" required  #username=\"ngModel\"/>\r\n              <div class=\"text-danger\" *ngIf=\"username.touched && username.invalid && username.errors.required \">Username is required</div>\r\n          </div>\r\n          <!--()Take the data from the form and put it  in the component--> \r\n          <!--Remember [] will push the data from the component(i.e here Login component) into the form-->\r\n          <!--() form itself is called into the component-->\r\n\r\n          <div class=\"form-group\">\r\n              <label for=\"password\">Password</label>\r\n              <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"creds.password\" required #password=\"ngModel\" />\r\n              <div class=\"text-danger\" *ngIf=\"password.touched && password.invalid && password.errors.required \">Password is required</div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n              <input type=\"submit\" class=\"btn btn-success\" value=\"Login\" [disabled]=\"theForm.invalid\" />\r\n              <a routerLink=\"/\" class=\"btn btn-default\">Cancel</a>\r\n          </div>\r\n      </form>\n  </div>\n</div>","import * as _ from \"lodash\";\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    //subtotal: number;\r\n    //field read only property which is called by the template\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, i => i.unitPrice * i.quantity));\r\n    };\r\n\r\n}\r\n\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productArtist: string;\r\n    productSize: string;\r\n    productPrice: number;\r\n    productTitle: string;\r\n    productArtId: string;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { dataService } from '../shared/dataService';\r\nimport { product } from '../shared/product';\r\nimport { Order } from './order';\r\n\n@Component({\n    selector: 'product-list',\n    templateUrl: \"./productList.component.html\",\n    styleUrls: [\"./productList.component.css\"]\n})\nexport class ProductListComponent implements OnInit {\n\n    constructor(private data: dataService) {\n    }\n\n    \n\r\n    Products: product[] = [];\n\r\n    ngOnInit(): void {\r\n        this.data.loadProducts()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.Products = this.data.Products;\r\n                }\r\n            });\r\n    }\n\n    addProduct(product: product) {\n        this.data.addToOrder(product);\n    }\n\n    //BY using product component we are gpassing the product to the data service method addToorder and by using  addToOrder() method of data service it adds \n    //to order and the length of the order is achieved by cart component through data servoice i.e. this.data.order.length\n}","<div class=\"row\">\r\n    <div class=\"product-info  col-md-4\" *ngFor=\"let p of Products\">\r\n      <div class=\"card bg-light p-1 m-1\">\r\n       <img src=\"/img/{{ p.artId }}.jpg\" class=\"img-fluid\" [alt]=\"p.title\">\r\n       <!--/write only binding it takes th value form the object and binds it.-->\r\n       <div class=\"product-name\">{{p.category}} - {{p.size}}</div>\r\n       <ul class=\"products-props list-unstyled\">\r\n            <li><strong>Price</strong>:{{ p.price | currency:\"USD\":true}}</li>\r\n            <li><strong>Artist</strong>:{{p.artist}}</li>\r\n            <li><strong>Title</strong>:{{p.title}}</li>\r\n            <!--<li><strong>Description</strong>:{{p.artDescription}}</li>-->\r\n        </ul>\r\n        <button id=\"theButton\" class=\"btn btn-success\" (click)=\"addProduct(p)\">Buy</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!--[alt] -- \"[]\" is to write something into the html and () parenthesis is to read from html-->","import { Component } from '@angular/core';\r\n\r\n\r\n\r\n@Component({\r\n    selector:\"the-shop\",\r\n    templateUrl:\"./shop.component.html\",\r\n    styleUrls:[]\r\n})\r\nexport class ShopComponent {\r\n\r\n}","<div class=\"row\">\r\n    <div class=\"col-md-9\">\r\n        <product-list></product-list>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n        <my-cart></my-cart>\r\n        <!--<h3 class=\"card bg-light p-2\"></h3>-->\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}